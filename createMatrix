#! /data/users/jgilet/.local/R/R-3.5.0/bin/Rscript

#Jules GILET <jules.gilet@curie.fr>

#part of the single cell custom pipeline for 10x datasets - salmon flavor
#create folder with matrix from salmon pseudo-alignment

#reading opt file as first argument
args <- commandArgs(TRUE)

if(length(args)==0){
	stop("Error: the salmon output path should be supplied as first argument.", call.=FALSE)
} else if(length(args)==1){
	path <- args[1]
} else if(length(args)>1){
	stop("Error: incorrect number of arguments.", call.=FALSE)
}

#functions
readAlevin <- function(path){

        require(Matrix)

        message("reading files...")
        cells <- read.delim(paste0(path, "/alevin/quants_mat_rows.txt"), header=FALSE)$V1
        genes <- read.delim(paste0(path, "/alevin/quants_mat_cols.txt"), header=FALSE)$V1
        mat <- read.csv(paste0(path, "/alevin/quants_mat.csv"), row.names=NULL, header=FALSE)
        mat <- mat[,-ncol(mat)]

        rownames(mat) <- cells
        colnames(mat) <- make.unique(as.character(genes))

#should not filter matrix by default
#        message("filtering matrix...")
#        mat <- mat[ ,colSums(mat)>0 ]
        
        message("creating sparse matrix...")
        mat <- Matrix(t(as.matrix(mat)), sparse=TRUE)

        message("done.")
        return(mat)

}

exportMat <- function(mat, path){

        cells <- colnames(mat)
        genes <- rownames(mat)

        message("exporting matrix...")
        write.table(x=data.frame(cell=cells), file=paste0(path,"/outs/barcodes.tsv"), row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
        write.table(x=data.frame(gene=genes, gene=genes), file=paste0(path,"/outs/genes.tsv"), row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
        writeMM(mat, file=paste0(path,"/outs/matrix.mtx"))

}

creatOutput <- function(path){

        dir.create(paste0(path,"/outs"), showWarnings=FALSE)
        mat <- readAlevin(path)
        exportMat(mat, path)

}



#exec
creatOutput(path)

q(save='no')
